services:
  api:
    build: .
    container_name: muni-api
    ports:
      - "8000:8000"
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://charlie.c:${POSTGRES_PASSWORD}@db:5432/transit
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn src.api.muni_api:app --host 0.0.0.0 --port 8000

  db:
    image: postgis/postgis:15-3.3
    container_name: muni-db
    environment:
      PYTHONPATH: /app
      POSTGRES_USER: charlie.c
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: transit
      POSTGRES_HOST: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U charlie.c -d transit"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  fetcher:
    build: .
    container_name: muni-gtfs-fetcher
    environment:
      PYTHONPATH: /app
      MUNI_API_KEY: 5e6bf5d8-1d98-4eb3-b927-69dcab843474
      POSTGRES_USERNAME: charlie.c
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: transit
      POSTGRES_HOST: db
      S3_BUCKET: charlie-muni-pg-backup 
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: python src/ingestion/fetch_script.py
  
volumes:
  pgdata:
